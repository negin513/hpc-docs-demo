name: preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    inputs:
      artifact_name:
        description: 'Name of the artifact (zipped book) created by previous build step'
        required: false
        default: book-zip
        type: string
      destination_dir:
        description: 'Path to publish to on GitHub Pages, relative to site root. We use this to deploy previews in a subdirectory.'
        required: false
        default: ''
        type: string
      is_preview:
        description: 'Are we deploying a preview?'
        required: false
        default: 'false'
        type: string
      cname:
        description: 'Custom domain name'
        required: false
        default: 'None'  # This is just a flag for whether to ignore this input
        type: string
      publish_dir:
        description: 'Publish dir for the peaceiris/actions-gh-pages action'
        required: false
        default: '_build/html'
        type: string

permissions:
  contents: write

jobs:
  deploy-preview:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 

      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - name: Build MkDocs website
        run: |
          pip install -r requirements.txt
          mkdocs build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          publish_branch: preview-${{ github.event.pull_request.number }}

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3.9.3
        if: |
          (github.ref == 'refs/heads/main')
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ inputs.publish_dir }}
          enable_jekyll: false
          keep_files: true  # This preserves existing previews from open PRs
          destination_dir: ${{ inputs.destination_dir }}

      - name: Deploy to GitHub Pages with custom domain
        uses: peaceiris/actions-gh-pages@v3.9.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          enable_jekyll: false
          keep_files: true  # This preserves existing previews from open PRs
          destination_dir: ./site
          cname: ${{github.event.pull_request.number}}

      - name: Comment PR
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issue_number = context.issue.number;
            const repo = context.repo;
            const url = `https://${repo.owner}.github.io/${repo.repo}/preview-${issue_number}`;
            github.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: `Preview URL: ${url}`
            });




      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      # Don't expose secrets to any other process other than the `netlify` cli;
      # don't risk rogue dependencies pulling our secrets
      - name: Deploy Preview to Netlify
        run: |
          netlify deploy \
            --dir="site" \
            --alias="${GITHUB_REPOSITORY#*/}-${{ github.event.number }}"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_PREVIEW_APP_SITE_ID }}

      - name: Add Netlify link PR comment
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const hostnameSuffix = "cal-itp-previews.netlify.app"
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Preview url: https://${context.repo.repo}-${{ github.event.number }}--${hostnameSuffix}`,
            })
